
Motor Controller 2018.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000876  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000802  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  00800100  00800100  00000876  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000876  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008a8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000070  00000000  00000000  000008e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000008cc  00000000  00000000  00000958  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006d7  00000000  00000000  00001224  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005a8  00000000  00000000  000018fb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000120  00000000  00000000  00001ea4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000042b  00000000  00000000  00001fc4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001a4  00000000  00000000  000023ef  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  00002593  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 48 00 	jmp	0x90	; 0x90 <__vector_4>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 01 01 	jmp	0x202	; 0x202 <__vector_21>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a7 30       	cpi	r26, 0x07	; 7
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 b5 01 	call	0x36a	; 0x36a <main>
  88:	0c 94 ff 03 	jmp	0x7fe	; 0x7fe <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <__vector_4>:
int ADC_i;

int adc_val = 0, offset = 0;

ISR(PCINT1_vect)
{
  90:	1f 92       	push	r1
  92:	0f 92       	push	r0
  94:	0f b6       	in	r0, 0x3f	; 63
  96:	0f 92       	push	r0
  98:	11 24       	eor	r1, r1
  9a:	8f 93       	push	r24
  9c:	9f 93       	push	r25
	if(PINC & (1<<HALL_Y) && !(PINC & (1<<HALL_G)) && !(PINC & (1<<HALL_B)))         // Commutation
  9e:	32 9b       	sbis	0x06, 2	; 6
  a0:	18 c0       	rjmp	.+48     	; 0xd2 <__vector_4+0x42>
  a2:	31 99       	sbic	0x06, 1	; 6
  a4:	16 c0       	rjmp	.+44     	; 0xd2 <__vector_4+0x42>
  a6:	30 99       	sbic	0x06, 0	; 6
  a8:	14 c0       	rjmp	.+40     	; 0xd2 <__vector_4+0x42>
	{
		// GH_B & GL_C
		OCR0A=0;  //<--
  aa:	17 bc       	out	0x27, r1	; 39
		OCR0B=0;
  ac:	18 bc       	out	0x28, r1	; 40
		OCR2A=255;  
  ae:	8f ef       	ldi	r24, 0xFF	; 255
  b0:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
		OCR2B=throttle;  //<--
  b4:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <throttle>
  b8:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
		OCR1A=255;
  bc:	8f ef       	ldi	r24, 0xFF	; 255
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  c4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
		OCR1B=0;
  c8:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
  cc:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
  d0:	91 c0       	rjmp	.+290    	; 0x1f4 <__vector_4+0x164>
	}
	else if(!(PINC & (1<<HALL_Y)) && PINC & (1<<HALL_G) && PINC & (1<<HALL_B))
  d2:	32 99       	sbic	0x06, 2	; 6
  d4:	18 c0       	rjmp	.+48     	; 0x106 <__vector_4+0x76>
  d6:	31 9b       	sbis	0x06, 1	; 6
  d8:	16 c0       	rjmp	.+44     	; 0x106 <__vector_4+0x76>
  da:	30 9b       	sbis	0x06, 0	; 6
  dc:	14 c0       	rjmp	.+40     	; 0x106 <__vector_4+0x76>
	{
		// GH_C & GL_B
		OCR0A=255;
  de:	8f ef       	ldi	r24, 0xFF	; 255
  e0:	87 bd       	out	0x27, r24	; 39
		OCR0B=throttle;  //<-
  e2:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <throttle>
  e6:	88 bd       	out	0x28, r24	; 40
		OCR2A=0;  //<--
  e8:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
		OCR2B=0;
  ec:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
		OCR1A=255;
  f0:	8f ef       	ldi	r24, 0xFF	; 255
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  f8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
		OCR1B=0;
  fc:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 100:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 104:	77 c0       	rjmp	.+238    	; 0x1f4 <__vector_4+0x164>
	}
	else if(!(PINC & (1<<HALL_Y)) && PINC & (1<<HALL_G) && !(PINC & (1<<HALL_B)))
 106:	32 99       	sbic	0x06, 2	; 6
 108:	19 c0       	rjmp	.+50     	; 0x13c <__vector_4+0xac>
 10a:	31 9b       	sbis	0x06, 1	; 6
 10c:	17 c0       	rjmp	.+46     	; 0x13c <__vector_4+0xac>
 10e:	30 99       	sbic	0x06, 0	; 6
 110:	15 c0       	rjmp	.+42     	; 0x13c <__vector_4+0xac>
	{
		// GH_A & GL_B
		OCR0A=255;
 112:	8f ef       	ldi	r24, 0xFF	; 255
 114:	87 bd       	out	0x27, r24	; 39
		OCR0B=0;
 116:	18 bc       	out	0x28, r1	; 40
		OCR2A=0;  //<--
 118:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
		OCR2B=0;
 11c:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
		OCR1A=255;
 120:	8f ef       	ldi	r24, 0xFF	; 255
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 128:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
		OCR1B=throttle;  //<--
 12c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <throttle>
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 136:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 13a:	5c c0       	rjmp	.+184    	; 0x1f4 <__vector_4+0x164>
	}
	else if(!(PINC & (1<<HALL_Y)) && !(PINC & (1<<HALL_G)) && PINC & (1<<HALL_B))
 13c:	32 99       	sbic	0x06, 2	; 6
 13e:	16 c0       	rjmp	.+44     	; 0x16c <__vector_4+0xdc>
 140:	31 99       	sbic	0x06, 1	; 6
 142:	14 c0       	rjmp	.+40     	; 0x16c <__vector_4+0xdc>
 144:	30 9b       	sbis	0x06, 0	; 6
 146:	12 c0       	rjmp	.+36     	; 0x16c <__vector_4+0xdc>
	{
		// GH_C & GL_A
		OCR0A=255;
 148:	8f ef       	ldi	r24, 0xFF	; 255
 14a:	87 bd       	out	0x27, r24	; 39
		OCR0B=throttle;  //<--
 14c:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <throttle>
 150:	98 bd       	out	0x28, r25	; 40
		OCR2A=255;
 152:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
		OCR2B=0;
 156:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
		OCR1A=0;  //<--
 15a:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 15e:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
		OCR1B=0;
 162:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 166:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 16a:	44 c0       	rjmp	.+136    	; 0x1f4 <__vector_4+0x164>
	}
	else if(PINC & (1<<HALL_Y) && !(PINC & (1<<HALL_G)) && PINC & (1<<HALL_B))
 16c:	32 9b       	sbis	0x06, 2	; 6
 16e:	16 c0       	rjmp	.+44     	; 0x19c <__vector_4+0x10c>
 170:	31 99       	sbic	0x06, 1	; 6
 172:	14 c0       	rjmp	.+40     	; 0x19c <__vector_4+0x10c>
 174:	30 9b       	sbis	0x06, 0	; 6
 176:	12 c0       	rjmp	.+36     	; 0x19c <__vector_4+0x10c>
	{
		// GH_B & GL_A
		OCR0A=255;
 178:	8f ef       	ldi	r24, 0xFF	; 255
 17a:	87 bd       	out	0x27, r24	; 39
		OCR0B=0;
 17c:	18 bc       	out	0x28, r1	; 40
		OCR2A=255;
 17e:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
		OCR2B=throttle;  //<--
 182:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <throttle>
 186:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
		OCR1A=0;  //<--
 18a:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 18e:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
		OCR1B=0;
 192:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 196:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 19a:	2c c0       	rjmp	.+88     	; 0x1f4 <__vector_4+0x164>
	}
	else if(PINC & (1<<HALL_Y) && PINC & (1<<HALL_G) && !(PINC & (1<<HALL_B)))
 19c:	32 9b       	sbis	0x06, 2	; 6
 19e:	19 c0       	rjmp	.+50     	; 0x1d2 <__vector_4+0x142>
 1a0:	31 9b       	sbis	0x06, 1	; 6
 1a2:	17 c0       	rjmp	.+46     	; 0x1d2 <__vector_4+0x142>
 1a4:	30 99       	sbic	0x06, 0	; 6
 1a6:	15 c0       	rjmp	.+42     	; 0x1d2 <__vector_4+0x142>
	{
		// GH_A & GL_C
		OCR0A=0;  //<--
 1a8:	17 bc       	out	0x27, r1	; 39
		OCR0B=0;
 1aa:	18 bc       	out	0x28, r1	; 40
		OCR2A=255;
 1ac:	8f ef       	ldi	r24, 0xFF	; 255
 1ae:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
		OCR2B=0;
 1b2:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
		OCR1A=255;
 1b6:	8f ef       	ldi	r24, 0xFF	; 255
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 1be:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
		OCR1B=throttle;  //<--
 1c2:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <throttle>
 1c6:	90 e0       	ldi	r25, 0x00	; 0
 1c8:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 1cc:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 1d0:	11 c0       	rjmp	.+34     	; 0x1f4 <__vector_4+0x164>
	}
	else
	{
		//comm_port=0x00;
		OCR0A=255;
 1d2:	8f ef       	ldi	r24, 0xFF	; 255
 1d4:	87 bd       	out	0x27, r24	; 39
		OCR0B=0;
 1d6:	18 bc       	out	0x28, r1	; 40
		OCR2A=255;
 1d8:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
		OCR2B=0;
 1dc:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
		OCR1A=255;
 1e0:	8f ef       	ldi	r24, 0xFF	; 255
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 1e8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
		OCR1B=0;
 1ec:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 1f0:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
	}
}
 1f4:	9f 91       	pop	r25
 1f6:	8f 91       	pop	r24
 1f8:	0f 90       	pop	r0
 1fa:	0f be       	out	0x3f, r0	; 63
 1fc:	0f 90       	pop	r0
 1fe:	1f 90       	pop	r1
 200:	18 95       	reti

00000202 <__vector_21>:

ISR(ADC_vect)
{
 202:	1f 92       	push	r1
 204:	0f 92       	push	r0
 206:	0f b6       	in	r0, 0x3f	; 63
 208:	0f 92       	push	r0
 20a:	11 24       	eor	r1, r1
 20c:	2f 93       	push	r18
 20e:	3f 93       	push	r19
 210:	4f 93       	push	r20
 212:	5f 93       	push	r21
 214:	6f 93       	push	r22
 216:	7f 93       	push	r23
 218:	8f 93       	push	r24
 21a:	9f 93       	push	r25
 21c:	af 93       	push	r26
 21e:	bf 93       	push	r27
 220:	ef 93       	push	r30
 222:	ff 93       	push	r31
	adc_val = ADC;
 224:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 228:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 22c:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <adc_val+0x1>
 230:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <adc_val>
	
	if (adc_val < 198)
 234:	66 3c       	cpi	r22, 0xC6	; 198
 236:	71 05       	cpc	r23, r1
 238:	1c f4       	brge	.+6      	; 0x240 <__vector_21+0x3e>
	{
		throttle = 0;
 23a:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <throttle>
 23e:	3c c0       	rjmp	.+120    	; 0x2b8 <__vector_21+0xb6>
	}
	else if (adc_val <= 812)
 240:	6d 32       	cpi	r22, 0x2D	; 45
 242:	83 e0       	ldi	r24, 0x03	; 3
 244:	78 07       	cpc	r23, r24
 246:	ac f5       	brge	.+106    	; 0x2b2 <__vector_21+0xb0>
	{//adc_val = 875;
		
		//int scaled_adc = ((float)adc_val/1024)*255; //41.828
		//OCR2A = (255.0/174.5)*(scaled_adc - 42);
		offset = (((float)adc_val/1023) * 255) - 42.115;
 248:	07 2e       	mov	r0, r23
 24a:	00 0c       	add	r0, r0
 24c:	88 0b       	sbc	r24, r24
 24e:	99 0b       	sbc	r25, r25
 250:	0e 94 06 03 	call	0x60c	; 0x60c <__floatsisf>
 254:	20 e0       	ldi	r18, 0x00	; 0
 256:	30 ec       	ldi	r19, 0xC0	; 192
 258:	4f e7       	ldi	r20, 0x7F	; 127
 25a:	54 e4       	ldi	r21, 0x44	; 68
 25c:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <__divsf3>
 260:	20 e0       	ldi	r18, 0x00	; 0
 262:	30 e0       	ldi	r19, 0x00	; 0
 264:	4f e7       	ldi	r20, 0x7F	; 127
 266:	53 e4       	ldi	r21, 0x43	; 67
 268:	0e 94 92 03 	call	0x724	; 0x724 <__mulsf3>
 26c:	23 ec       	ldi	r18, 0xC3	; 195
 26e:	35 e7       	ldi	r19, 0x75	; 117
 270:	48 e2       	ldi	r20, 0x28	; 40
 272:	52 e4       	ldi	r21, 0x42	; 66
 274:	0e 94 ef 01 	call	0x3de	; 0x3de <__subsf3>
 278:	0e 94 ce 02 	call	0x59c	; 0x59c <__fixsfsi>
 27c:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <_edata+0x1>
 280:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <_edata>
		throttle = ((float)offset/174.7353) * 255;		//176.382
 284:	07 2e       	mov	r0, r23
 286:	00 0c       	add	r0, r0
 288:	88 0b       	sbc	r24, r24
 28a:	99 0b       	sbc	r25, r25
 28c:	0e 94 06 03 	call	0x60c	; 0x60c <__floatsisf>
 290:	2d e3       	ldi	r18, 0x3D	; 61
 292:	3c eb       	ldi	r19, 0xBC	; 188
 294:	4e e2       	ldi	r20, 0x2E	; 46
 296:	53 e4       	ldi	r21, 0x43	; 67
 298:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <__divsf3>
 29c:	20 e0       	ldi	r18, 0x00	; 0
 29e:	30 e0       	ldi	r19, 0x00	; 0
 2a0:	4f e7       	ldi	r20, 0x7F	; 127
 2a2:	53 e4       	ldi	r21, 0x43	; 67
 2a4:	0e 94 92 03 	call	0x724	; 0x724 <__mulsf3>
 2a8:	0e 94 d5 02 	call	0x5aa	; 0x5aa <__fixunssfsi>
 2ac:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <throttle>
 2b0:	03 c0       	rjmp	.+6      	; 0x2b8 <__vector_21+0xb6>
	}
	else
	throttle = 255;
 2b2:	8f ef       	ldi	r24, 0xFF	; 255
 2b4:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <throttle>
	//throttle=fabs((int)((float)ADC*255/750-60));
	//throttle=fabs((int)((float)ADC*255/870-52));
	//throttle=(ADC*255.0)/1023.0;
}
 2b8:	ff 91       	pop	r31
 2ba:	ef 91       	pop	r30
 2bc:	bf 91       	pop	r27
 2be:	af 91       	pop	r26
 2c0:	9f 91       	pop	r25
 2c2:	8f 91       	pop	r24
 2c4:	7f 91       	pop	r23
 2c6:	6f 91       	pop	r22
 2c8:	5f 91       	pop	r21
 2ca:	4f 91       	pop	r20
 2cc:	3f 91       	pop	r19
 2ce:	2f 91       	pop	r18
 2d0:	0f 90       	pop	r0
 2d2:	0f be       	out	0x3f, r0	; 63
 2d4:	0f 90       	pop	r0
 2d6:	1f 90       	pop	r1
 2d8:	18 95       	reti

000002da <pin_change_interrupt_init>:
	}
}

void pin_change_interrupt_init(void)
{
	PCMSK1=(1<<PCINT8)|(1<<PCINT9)|(1<<PCINT10)|(1<<PCINT13);
 2da:	87 e2       	ldi	r24, 0x27	; 39
 2dc:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
	PCICR=(1<<PCIE1);
 2e0:	82 e0       	ldi	r24, 0x02	; 2
 2e2:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__TEXT_REGION_LENGTH__+0x7e0068>
 2e6:	08 95       	ret

000002e8 <ADC_init>:
}
void ADC_init(void)
{
	ADMUX=(1<<REFS0)|(1<<MUX2);
 2e8:	84 e4       	ldi	r24, 0x44	; 68
 2ea:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	ADCSRA=(1<<ADEN)|(1<<ADIE)|(1<<ADPS2)|(1<<ADPS1)|(ADPS0);
 2ee:	8e e8       	ldi	r24, 0x8E	; 142
 2f0:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 2f4:	08 95       	ret

000002f6 <GH_A_PWM>:
}
void GH_A_PWM(void)
{
	TCCR1A|=(1<<COM1B1)|(1<<WGM10);
 2f6:	e0 e8       	ldi	r30, 0x80	; 128
 2f8:	f0 e0       	ldi	r31, 0x00	; 0
 2fa:	80 81       	ld	r24, Z
 2fc:	81 62       	ori	r24, 0x21	; 33
 2fe:	80 83       	st	Z, r24
	TCCR1B|=(1<<WGM12)|(1<<CS10);
 300:	e1 e8       	ldi	r30, 0x81	; 129
 302:	f0 e0       	ldi	r31, 0x00	; 0
 304:	80 81       	ld	r24, Z
 306:	89 60       	ori	r24, 0x09	; 9
 308:	80 83       	st	Z, r24
 30a:	08 95       	ret

0000030c <GL_A_PWM>:
}
void GL_A_PWM(void)
{
	TCCR1A|=(1<<COM1A1)|(1<<COM1A0)|(1<<WGM10);
 30c:	e0 e8       	ldi	r30, 0x80	; 128
 30e:	f0 e0       	ldi	r31, 0x00	; 0
 310:	80 81       	ld	r24, Z
 312:	81 6c       	ori	r24, 0xC1	; 193
 314:	80 83       	st	Z, r24
	TCCR1B|=(1<<WGM12)|(1<<CS10);
 316:	e1 e8       	ldi	r30, 0x81	; 129
 318:	f0 e0       	ldi	r31, 0x00	; 0
 31a:	80 81       	ld	r24, Z
 31c:	89 60       	ori	r24, 0x09	; 9
 31e:	80 83       	st	Z, r24
 320:	08 95       	ret

00000322 <GH_B_PWM>:
}
void GH_B_PWM(void)
{
	TCCR2A|=(1<<COM2B1)|(1<<WGM21)|(1<<WGM20);
 322:	e0 eb       	ldi	r30, 0xB0	; 176
 324:	f0 e0       	ldi	r31, 0x00	; 0
 326:	80 81       	ld	r24, Z
 328:	83 62       	ori	r24, 0x23	; 35
 32a:	80 83       	st	Z, r24
	TCCR2B|=(1<<CS20);
 32c:	e1 eb       	ldi	r30, 0xB1	; 177
 32e:	f0 e0       	ldi	r31, 0x00	; 0
 330:	80 81       	ld	r24, Z
 332:	81 60       	ori	r24, 0x01	; 1
 334:	80 83       	st	Z, r24
 336:	08 95       	ret

00000338 <GL_B_PWM>:
}
void GL_B_PWM(void)
{
	TCCR2A|=(1<<COM2A1)|(1<<COM2A0)|(1<<WGM21)|(1<<WGM20);
 338:	e0 eb       	ldi	r30, 0xB0	; 176
 33a:	f0 e0       	ldi	r31, 0x00	; 0
 33c:	80 81       	ld	r24, Z
 33e:	83 6c       	ori	r24, 0xC3	; 195
 340:	80 83       	st	Z, r24
	TCCR2B|=(1<<CS20);
 342:	e1 eb       	ldi	r30, 0xB1	; 177
 344:	f0 e0       	ldi	r31, 0x00	; 0
 346:	80 81       	ld	r24, Z
 348:	81 60       	ori	r24, 0x01	; 1
 34a:	80 83       	st	Z, r24
 34c:	08 95       	ret

0000034e <GH_C_PWM>:
}
void GH_C_PWM(void)
{
	TCCR0A|=(1<<COM0B1)|(1<<WGM01)|(1<<WGM00);
 34e:	84 b5       	in	r24, 0x24	; 36
 350:	83 62       	ori	r24, 0x23	; 35
 352:	84 bd       	out	0x24, r24	; 36
	TCCR0B|=(1<<CS00);
 354:	85 b5       	in	r24, 0x25	; 37
 356:	81 60       	ori	r24, 0x01	; 1
 358:	85 bd       	out	0x25, r24	; 37
 35a:	08 95       	ret

0000035c <GL_C_PWM>:
}
void GL_C_PWM(void)
{
	TCCR0A|=(1<<COM0A1)|(1<<COM0A0)|(1<<WGM01)|(1<<WGM00);
 35c:	84 b5       	in	r24, 0x24	; 36
 35e:	83 6c       	ori	r24, 0xC3	; 195
 360:	84 bd       	out	0x24, r24	; 36
	TCCR0B|=(1<<CS00);
 362:	85 b5       	in	r24, 0x25	; 37
 364:	81 60       	ori	r24, 0x01	; 1
 366:	85 bd       	out	0x25, r24	; 37
 368:	08 95       	ret

0000036a <main>:
	//throttle=(ADC*255.0)/1023.0;
}

int main(void)
{
	DDRD|=(1<<GH_B)|(1<<GH_C)|(1<<GL_C)|(1<<EN_GATE);
 36a:	8a b1       	in	r24, 0x0a	; 10
 36c:	8c 66       	ori	r24, 0x6C	; 108
 36e:	8a b9       	out	0x0a, r24	; 10
	DDRB|=(1<<GL_A)|(1<<GL_B)|(1<<GH_A)|(1<<throttle_led);
 370:	84 b1       	in	r24, 0x04	; 4
 372:	8f 60       	ori	r24, 0x0F	; 15
 374:	84 b9       	out	0x04, r24	; 4
	DDRC|=(1<<zero_throttle);
 376:	3d 9a       	sbi	0x07, 5	; 7
	sei();
 378:	78 94       	sei
	pin_change_interrupt_init();
 37a:	0e 94 6d 01 	call	0x2da	; 0x2da <pin_change_interrupt_init>
	GH_A_PWM();
 37e:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <GH_A_PWM>
	GL_A_PWM();
 382:	0e 94 86 01 	call	0x30c	; 0x30c <GL_A_PWM>
	GH_B_PWM();
 386:	0e 94 91 01 	call	0x322	; 0x322 <GH_B_PWM>
	GL_B_PWM();
 38a:	0e 94 9c 01 	call	0x338	; 0x338 <GL_B_PWM>
	GH_C_PWM();
 38e:	0e 94 a7 01 	call	0x34e	; 0x34e <GH_C_PWM>
	GL_C_PWM();
 392:	0e 94 ae 01 	call	0x35c	; 0x35c <GL_C_PWM>
	ADC_init();
 396:	0e 94 74 01 	call	0x2e8	; 0x2e8 <ADC_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 39a:	2f ef       	ldi	r18, 0xFF	; 255
 39c:	89 e6       	ldi	r24, 0x69	; 105
 39e:	98 e1       	ldi	r25, 0x18	; 24
 3a0:	21 50       	subi	r18, 0x01	; 1
 3a2:	80 40       	sbci	r24, 0x00	; 0
 3a4:	90 40       	sbci	r25, 0x00	; 0
 3a6:	e1 f7       	brne	.-8      	; 0x3a0 <main+0x36>
 3a8:	00 c0       	rjmp	.+0      	; 0x3aa <main+0x40>
 3aa:	00 00       	nop
	_delay_ms(1000);
	PORTD|=(1<<EN_GATE);
 3ac:	5a 9a       	sbi	0x0b, 2	; 11
 3ae:	2f ef       	ldi	r18, 0xFF	; 255
 3b0:	80 e7       	ldi	r24, 0x70	; 112
 3b2:	92 e0       	ldi	r25, 0x02	; 2
 3b4:	21 50       	subi	r18, 0x01	; 1
 3b6:	80 40       	sbci	r24, 0x00	; 0
 3b8:	90 40       	sbci	r25, 0x00	; 0
 3ba:	e1 f7       	brne	.-8      	; 0x3b4 <main+0x4a>
 3bc:	00 c0       	rjmp	.+0      	; 0x3be <main+0x54>
 3be:	00 00       	nop
	_delay_ms(100);
	PORTB=(1<<throttle_led);
 3c0:	81 e0       	ldi	r24, 0x01	; 1
 3c2:	85 b9       	out	0x05, r24	; 5
	throttle = 0;
 3c4:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <throttle>
	while(1)
	{
		ADCSRA|=(1<<ADSC);
 3c8:	ea e7       	ldi	r30, 0x7A	; 122
 3ca:	f0 e0       	ldi	r31, 0x00	; 0
 3cc:	80 81       	ld	r24, Z
 3ce:	80 64       	ori	r24, 0x40	; 64
 3d0:	80 83       	st	Z, r24
		while (ADCSRA & (1<<ADSC));
 3d2:	80 81       	ld	r24, Z
 3d4:	86 fd       	sbrc	r24, 6
 3d6:	fd cf       	rjmp	.-6      	; 0x3d2 <main+0x68>
		if (throttle<300)
		{
			PORTC|=(1<<zero_throttle);
 3d8:	45 9a       	sbi	0x08, 5	; 8
			PORTC&= ~(1<<zero_throttle);
 3da:	45 98       	cbi	0x08, 5	; 8
		{
			//_delay_us(64);
			//spi read command to now at which mosfets OC event occur
			//spi gate reset command
		}*/
	}
 3dc:	f7 cf       	rjmp	.-18     	; 0x3cc <main+0x62>

000003de <__subsf3>:
 3de:	50 58       	subi	r21, 0x80	; 128

000003e0 <__addsf3>:
 3e0:	bb 27       	eor	r27, r27
 3e2:	aa 27       	eor	r26, r26
 3e4:	0e 94 07 02 	call	0x40e	; 0x40e <__addsf3x>
 3e8:	0c 94 58 03 	jmp	0x6b0	; 0x6b0 <__fp_round>
 3ec:	0e 94 4a 03 	call	0x694	; 0x694 <__fp_pscA>
 3f0:	38 f0       	brcs	.+14     	; 0x400 <__LOCK_REGION_LENGTH__>
 3f2:	0e 94 51 03 	call	0x6a2	; 0x6a2 <__fp_pscB>
 3f6:	20 f0       	brcs	.+8      	; 0x400 <__LOCK_REGION_LENGTH__>
 3f8:	39 f4       	brne	.+14     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3fa:	9f 3f       	cpi	r25, 0xFF	; 255
 3fc:	19 f4       	brne	.+6      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3fe:	26 f4       	brtc	.+8      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 400:	0c 94 47 03 	jmp	0x68e	; 0x68e <__fp_nan>
 404:	0e f4       	brtc	.+2      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 406:	e0 95       	com	r30
 408:	e7 fb       	bst	r30, 7
 40a:	0c 94 41 03 	jmp	0x682	; 0x682 <__fp_inf>

0000040e <__addsf3x>:
 40e:	e9 2f       	mov	r30, r25
 410:	0e 94 69 03 	call	0x6d2	; 0x6d2 <__fp_split3>
 414:	58 f3       	brcs	.-42     	; 0x3ec <__addsf3+0xc>
 416:	ba 17       	cp	r27, r26
 418:	62 07       	cpc	r22, r18
 41a:	73 07       	cpc	r23, r19
 41c:	84 07       	cpc	r24, r20
 41e:	95 07       	cpc	r25, r21
 420:	20 f0       	brcs	.+8      	; 0x42a <__addsf3x+0x1c>
 422:	79 f4       	brne	.+30     	; 0x442 <__addsf3x+0x34>
 424:	a6 f5       	brtc	.+104    	; 0x48e <__addsf3x+0x80>
 426:	0c 94 8b 03 	jmp	0x716	; 0x716 <__fp_zero>
 42a:	0e f4       	brtc	.+2      	; 0x42e <__addsf3x+0x20>
 42c:	e0 95       	com	r30
 42e:	0b 2e       	mov	r0, r27
 430:	ba 2f       	mov	r27, r26
 432:	a0 2d       	mov	r26, r0
 434:	0b 01       	movw	r0, r22
 436:	b9 01       	movw	r22, r18
 438:	90 01       	movw	r18, r0
 43a:	0c 01       	movw	r0, r24
 43c:	ca 01       	movw	r24, r20
 43e:	a0 01       	movw	r20, r0
 440:	11 24       	eor	r1, r1
 442:	ff 27       	eor	r31, r31
 444:	59 1b       	sub	r21, r25
 446:	99 f0       	breq	.+38     	; 0x46e <__addsf3x+0x60>
 448:	59 3f       	cpi	r21, 0xF9	; 249
 44a:	50 f4       	brcc	.+20     	; 0x460 <__addsf3x+0x52>
 44c:	50 3e       	cpi	r21, 0xE0	; 224
 44e:	68 f1       	brcs	.+90     	; 0x4aa <__addsf3x+0x9c>
 450:	1a 16       	cp	r1, r26
 452:	f0 40       	sbci	r31, 0x00	; 0
 454:	a2 2f       	mov	r26, r18
 456:	23 2f       	mov	r18, r19
 458:	34 2f       	mov	r19, r20
 45a:	44 27       	eor	r20, r20
 45c:	58 5f       	subi	r21, 0xF8	; 248
 45e:	f3 cf       	rjmp	.-26     	; 0x446 <__addsf3x+0x38>
 460:	46 95       	lsr	r20
 462:	37 95       	ror	r19
 464:	27 95       	ror	r18
 466:	a7 95       	ror	r26
 468:	f0 40       	sbci	r31, 0x00	; 0
 46a:	53 95       	inc	r21
 46c:	c9 f7       	brne	.-14     	; 0x460 <__addsf3x+0x52>
 46e:	7e f4       	brtc	.+30     	; 0x48e <__addsf3x+0x80>
 470:	1f 16       	cp	r1, r31
 472:	ba 0b       	sbc	r27, r26
 474:	62 0b       	sbc	r22, r18
 476:	73 0b       	sbc	r23, r19
 478:	84 0b       	sbc	r24, r20
 47a:	ba f0       	brmi	.+46     	; 0x4aa <__addsf3x+0x9c>
 47c:	91 50       	subi	r25, 0x01	; 1
 47e:	a1 f0       	breq	.+40     	; 0x4a8 <__addsf3x+0x9a>
 480:	ff 0f       	add	r31, r31
 482:	bb 1f       	adc	r27, r27
 484:	66 1f       	adc	r22, r22
 486:	77 1f       	adc	r23, r23
 488:	88 1f       	adc	r24, r24
 48a:	c2 f7       	brpl	.-16     	; 0x47c <__addsf3x+0x6e>
 48c:	0e c0       	rjmp	.+28     	; 0x4aa <__addsf3x+0x9c>
 48e:	ba 0f       	add	r27, r26
 490:	62 1f       	adc	r22, r18
 492:	73 1f       	adc	r23, r19
 494:	84 1f       	adc	r24, r20
 496:	48 f4       	brcc	.+18     	; 0x4aa <__addsf3x+0x9c>
 498:	87 95       	ror	r24
 49a:	77 95       	ror	r23
 49c:	67 95       	ror	r22
 49e:	b7 95       	ror	r27
 4a0:	f7 95       	ror	r31
 4a2:	9e 3f       	cpi	r25, 0xFE	; 254
 4a4:	08 f0       	brcs	.+2      	; 0x4a8 <__addsf3x+0x9a>
 4a6:	b0 cf       	rjmp	.-160    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 4a8:	93 95       	inc	r25
 4aa:	88 0f       	add	r24, r24
 4ac:	08 f0       	brcs	.+2      	; 0x4b0 <__addsf3x+0xa2>
 4ae:	99 27       	eor	r25, r25
 4b0:	ee 0f       	add	r30, r30
 4b2:	97 95       	ror	r25
 4b4:	87 95       	ror	r24
 4b6:	08 95       	ret

000004b8 <__divsf3>:
 4b8:	0e 94 70 02 	call	0x4e0	; 0x4e0 <__divsf3x>
 4bc:	0c 94 58 03 	jmp	0x6b0	; 0x6b0 <__fp_round>
 4c0:	0e 94 51 03 	call	0x6a2	; 0x6a2 <__fp_pscB>
 4c4:	58 f0       	brcs	.+22     	; 0x4dc <__divsf3+0x24>
 4c6:	0e 94 4a 03 	call	0x694	; 0x694 <__fp_pscA>
 4ca:	40 f0       	brcs	.+16     	; 0x4dc <__divsf3+0x24>
 4cc:	29 f4       	brne	.+10     	; 0x4d8 <__divsf3+0x20>
 4ce:	5f 3f       	cpi	r21, 0xFF	; 255
 4d0:	29 f0       	breq	.+10     	; 0x4dc <__divsf3+0x24>
 4d2:	0c 94 41 03 	jmp	0x682	; 0x682 <__fp_inf>
 4d6:	51 11       	cpse	r21, r1
 4d8:	0c 94 8c 03 	jmp	0x718	; 0x718 <__fp_szero>
 4dc:	0c 94 47 03 	jmp	0x68e	; 0x68e <__fp_nan>

000004e0 <__divsf3x>:
 4e0:	0e 94 69 03 	call	0x6d2	; 0x6d2 <__fp_split3>
 4e4:	68 f3       	brcs	.-38     	; 0x4c0 <__divsf3+0x8>

000004e6 <__divsf3_pse>:
 4e6:	99 23       	and	r25, r25
 4e8:	b1 f3       	breq	.-20     	; 0x4d6 <__divsf3+0x1e>
 4ea:	55 23       	and	r21, r21
 4ec:	91 f3       	breq	.-28     	; 0x4d2 <__divsf3+0x1a>
 4ee:	95 1b       	sub	r25, r21
 4f0:	55 0b       	sbc	r21, r21
 4f2:	bb 27       	eor	r27, r27
 4f4:	aa 27       	eor	r26, r26
 4f6:	62 17       	cp	r22, r18
 4f8:	73 07       	cpc	r23, r19
 4fa:	84 07       	cpc	r24, r20
 4fc:	38 f0       	brcs	.+14     	; 0x50c <__divsf3_pse+0x26>
 4fe:	9f 5f       	subi	r25, 0xFF	; 255
 500:	5f 4f       	sbci	r21, 0xFF	; 255
 502:	22 0f       	add	r18, r18
 504:	33 1f       	adc	r19, r19
 506:	44 1f       	adc	r20, r20
 508:	aa 1f       	adc	r26, r26
 50a:	a9 f3       	breq	.-22     	; 0x4f6 <__divsf3_pse+0x10>
 50c:	35 d0       	rcall	.+106    	; 0x578 <__divsf3_pse+0x92>
 50e:	0e 2e       	mov	r0, r30
 510:	3a f0       	brmi	.+14     	; 0x520 <__divsf3_pse+0x3a>
 512:	e0 e8       	ldi	r30, 0x80	; 128
 514:	32 d0       	rcall	.+100    	; 0x57a <__divsf3_pse+0x94>
 516:	91 50       	subi	r25, 0x01	; 1
 518:	50 40       	sbci	r21, 0x00	; 0
 51a:	e6 95       	lsr	r30
 51c:	00 1c       	adc	r0, r0
 51e:	ca f7       	brpl	.-14     	; 0x512 <__divsf3_pse+0x2c>
 520:	2b d0       	rcall	.+86     	; 0x578 <__divsf3_pse+0x92>
 522:	fe 2f       	mov	r31, r30
 524:	29 d0       	rcall	.+82     	; 0x578 <__divsf3_pse+0x92>
 526:	66 0f       	add	r22, r22
 528:	77 1f       	adc	r23, r23
 52a:	88 1f       	adc	r24, r24
 52c:	bb 1f       	adc	r27, r27
 52e:	26 17       	cp	r18, r22
 530:	37 07       	cpc	r19, r23
 532:	48 07       	cpc	r20, r24
 534:	ab 07       	cpc	r26, r27
 536:	b0 e8       	ldi	r27, 0x80	; 128
 538:	09 f0       	breq	.+2      	; 0x53c <__divsf3_pse+0x56>
 53a:	bb 0b       	sbc	r27, r27
 53c:	80 2d       	mov	r24, r0
 53e:	bf 01       	movw	r22, r30
 540:	ff 27       	eor	r31, r31
 542:	93 58       	subi	r25, 0x83	; 131
 544:	5f 4f       	sbci	r21, 0xFF	; 255
 546:	3a f0       	brmi	.+14     	; 0x556 <__divsf3_pse+0x70>
 548:	9e 3f       	cpi	r25, 0xFE	; 254
 54a:	51 05       	cpc	r21, r1
 54c:	78 f0       	brcs	.+30     	; 0x56c <__divsf3_pse+0x86>
 54e:	0c 94 41 03 	jmp	0x682	; 0x682 <__fp_inf>
 552:	0c 94 8c 03 	jmp	0x718	; 0x718 <__fp_szero>
 556:	5f 3f       	cpi	r21, 0xFF	; 255
 558:	e4 f3       	brlt	.-8      	; 0x552 <__divsf3_pse+0x6c>
 55a:	98 3e       	cpi	r25, 0xE8	; 232
 55c:	d4 f3       	brlt	.-12     	; 0x552 <__divsf3_pse+0x6c>
 55e:	86 95       	lsr	r24
 560:	77 95       	ror	r23
 562:	67 95       	ror	r22
 564:	b7 95       	ror	r27
 566:	f7 95       	ror	r31
 568:	9f 5f       	subi	r25, 0xFF	; 255
 56a:	c9 f7       	brne	.-14     	; 0x55e <__divsf3_pse+0x78>
 56c:	88 0f       	add	r24, r24
 56e:	91 1d       	adc	r25, r1
 570:	96 95       	lsr	r25
 572:	87 95       	ror	r24
 574:	97 f9       	bld	r25, 7
 576:	08 95       	ret
 578:	e1 e0       	ldi	r30, 0x01	; 1
 57a:	66 0f       	add	r22, r22
 57c:	77 1f       	adc	r23, r23
 57e:	88 1f       	adc	r24, r24
 580:	bb 1f       	adc	r27, r27
 582:	62 17       	cp	r22, r18
 584:	73 07       	cpc	r23, r19
 586:	84 07       	cpc	r24, r20
 588:	ba 07       	cpc	r27, r26
 58a:	20 f0       	brcs	.+8      	; 0x594 <__divsf3_pse+0xae>
 58c:	62 1b       	sub	r22, r18
 58e:	73 0b       	sbc	r23, r19
 590:	84 0b       	sbc	r24, r20
 592:	ba 0b       	sbc	r27, r26
 594:	ee 1f       	adc	r30, r30
 596:	88 f7       	brcc	.-30     	; 0x57a <__divsf3_pse+0x94>
 598:	e0 95       	com	r30
 59a:	08 95       	ret

0000059c <__fixsfsi>:
 59c:	0e 94 d5 02 	call	0x5aa	; 0x5aa <__fixunssfsi>
 5a0:	68 94       	set
 5a2:	b1 11       	cpse	r27, r1
 5a4:	0c 94 8c 03 	jmp	0x718	; 0x718 <__fp_szero>
 5a8:	08 95       	ret

000005aa <__fixunssfsi>:
 5aa:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__fp_splitA>
 5ae:	88 f0       	brcs	.+34     	; 0x5d2 <__fixunssfsi+0x28>
 5b0:	9f 57       	subi	r25, 0x7F	; 127
 5b2:	98 f0       	brcs	.+38     	; 0x5da <__fixunssfsi+0x30>
 5b4:	b9 2f       	mov	r27, r25
 5b6:	99 27       	eor	r25, r25
 5b8:	b7 51       	subi	r27, 0x17	; 23
 5ba:	b0 f0       	brcs	.+44     	; 0x5e8 <__fixunssfsi+0x3e>
 5bc:	e1 f0       	breq	.+56     	; 0x5f6 <__fixunssfsi+0x4c>
 5be:	66 0f       	add	r22, r22
 5c0:	77 1f       	adc	r23, r23
 5c2:	88 1f       	adc	r24, r24
 5c4:	99 1f       	adc	r25, r25
 5c6:	1a f0       	brmi	.+6      	; 0x5ce <__fixunssfsi+0x24>
 5c8:	ba 95       	dec	r27
 5ca:	c9 f7       	brne	.-14     	; 0x5be <__fixunssfsi+0x14>
 5cc:	14 c0       	rjmp	.+40     	; 0x5f6 <__fixunssfsi+0x4c>
 5ce:	b1 30       	cpi	r27, 0x01	; 1
 5d0:	91 f0       	breq	.+36     	; 0x5f6 <__fixunssfsi+0x4c>
 5d2:	0e 94 8b 03 	call	0x716	; 0x716 <__fp_zero>
 5d6:	b1 e0       	ldi	r27, 0x01	; 1
 5d8:	08 95       	ret
 5da:	0c 94 8b 03 	jmp	0x716	; 0x716 <__fp_zero>
 5de:	67 2f       	mov	r22, r23
 5e0:	78 2f       	mov	r23, r24
 5e2:	88 27       	eor	r24, r24
 5e4:	b8 5f       	subi	r27, 0xF8	; 248
 5e6:	39 f0       	breq	.+14     	; 0x5f6 <__fixunssfsi+0x4c>
 5e8:	b9 3f       	cpi	r27, 0xF9	; 249
 5ea:	cc f3       	brlt	.-14     	; 0x5de <__fixunssfsi+0x34>
 5ec:	86 95       	lsr	r24
 5ee:	77 95       	ror	r23
 5f0:	67 95       	ror	r22
 5f2:	b3 95       	inc	r27
 5f4:	d9 f7       	brne	.-10     	; 0x5ec <__fixunssfsi+0x42>
 5f6:	3e f4       	brtc	.+14     	; 0x606 <__fixunssfsi+0x5c>
 5f8:	90 95       	com	r25
 5fa:	80 95       	com	r24
 5fc:	70 95       	com	r23
 5fe:	61 95       	neg	r22
 600:	7f 4f       	sbci	r23, 0xFF	; 255
 602:	8f 4f       	sbci	r24, 0xFF	; 255
 604:	9f 4f       	sbci	r25, 0xFF	; 255
 606:	08 95       	ret

00000608 <__floatunsisf>:
 608:	e8 94       	clt
 60a:	09 c0       	rjmp	.+18     	; 0x61e <__floatsisf+0x12>

0000060c <__floatsisf>:
 60c:	97 fb       	bst	r25, 7
 60e:	3e f4       	brtc	.+14     	; 0x61e <__floatsisf+0x12>
 610:	90 95       	com	r25
 612:	80 95       	com	r24
 614:	70 95       	com	r23
 616:	61 95       	neg	r22
 618:	7f 4f       	sbci	r23, 0xFF	; 255
 61a:	8f 4f       	sbci	r24, 0xFF	; 255
 61c:	9f 4f       	sbci	r25, 0xFF	; 255
 61e:	99 23       	and	r25, r25
 620:	a9 f0       	breq	.+42     	; 0x64c <__floatsisf+0x40>
 622:	f9 2f       	mov	r31, r25
 624:	96 e9       	ldi	r25, 0x96	; 150
 626:	bb 27       	eor	r27, r27
 628:	93 95       	inc	r25
 62a:	f6 95       	lsr	r31
 62c:	87 95       	ror	r24
 62e:	77 95       	ror	r23
 630:	67 95       	ror	r22
 632:	b7 95       	ror	r27
 634:	f1 11       	cpse	r31, r1
 636:	f8 cf       	rjmp	.-16     	; 0x628 <__floatsisf+0x1c>
 638:	fa f4       	brpl	.+62     	; 0x678 <__floatsisf+0x6c>
 63a:	bb 0f       	add	r27, r27
 63c:	11 f4       	brne	.+4      	; 0x642 <__floatsisf+0x36>
 63e:	60 ff       	sbrs	r22, 0
 640:	1b c0       	rjmp	.+54     	; 0x678 <__floatsisf+0x6c>
 642:	6f 5f       	subi	r22, 0xFF	; 255
 644:	7f 4f       	sbci	r23, 0xFF	; 255
 646:	8f 4f       	sbci	r24, 0xFF	; 255
 648:	9f 4f       	sbci	r25, 0xFF	; 255
 64a:	16 c0       	rjmp	.+44     	; 0x678 <__floatsisf+0x6c>
 64c:	88 23       	and	r24, r24
 64e:	11 f0       	breq	.+4      	; 0x654 <__floatsisf+0x48>
 650:	96 e9       	ldi	r25, 0x96	; 150
 652:	11 c0       	rjmp	.+34     	; 0x676 <__floatsisf+0x6a>
 654:	77 23       	and	r23, r23
 656:	21 f0       	breq	.+8      	; 0x660 <__floatsisf+0x54>
 658:	9e e8       	ldi	r25, 0x8E	; 142
 65a:	87 2f       	mov	r24, r23
 65c:	76 2f       	mov	r23, r22
 65e:	05 c0       	rjmp	.+10     	; 0x66a <__floatsisf+0x5e>
 660:	66 23       	and	r22, r22
 662:	71 f0       	breq	.+28     	; 0x680 <__floatsisf+0x74>
 664:	96 e8       	ldi	r25, 0x86	; 134
 666:	86 2f       	mov	r24, r22
 668:	70 e0       	ldi	r23, 0x00	; 0
 66a:	60 e0       	ldi	r22, 0x00	; 0
 66c:	2a f0       	brmi	.+10     	; 0x678 <__floatsisf+0x6c>
 66e:	9a 95       	dec	r25
 670:	66 0f       	add	r22, r22
 672:	77 1f       	adc	r23, r23
 674:	88 1f       	adc	r24, r24
 676:	da f7       	brpl	.-10     	; 0x66e <__floatsisf+0x62>
 678:	88 0f       	add	r24, r24
 67a:	96 95       	lsr	r25
 67c:	87 95       	ror	r24
 67e:	97 f9       	bld	r25, 7
 680:	08 95       	ret

00000682 <__fp_inf>:
 682:	97 f9       	bld	r25, 7
 684:	9f 67       	ori	r25, 0x7F	; 127
 686:	80 e8       	ldi	r24, 0x80	; 128
 688:	70 e0       	ldi	r23, 0x00	; 0
 68a:	60 e0       	ldi	r22, 0x00	; 0
 68c:	08 95       	ret

0000068e <__fp_nan>:
 68e:	9f ef       	ldi	r25, 0xFF	; 255
 690:	80 ec       	ldi	r24, 0xC0	; 192
 692:	08 95       	ret

00000694 <__fp_pscA>:
 694:	00 24       	eor	r0, r0
 696:	0a 94       	dec	r0
 698:	16 16       	cp	r1, r22
 69a:	17 06       	cpc	r1, r23
 69c:	18 06       	cpc	r1, r24
 69e:	09 06       	cpc	r0, r25
 6a0:	08 95       	ret

000006a2 <__fp_pscB>:
 6a2:	00 24       	eor	r0, r0
 6a4:	0a 94       	dec	r0
 6a6:	12 16       	cp	r1, r18
 6a8:	13 06       	cpc	r1, r19
 6aa:	14 06       	cpc	r1, r20
 6ac:	05 06       	cpc	r0, r21
 6ae:	08 95       	ret

000006b0 <__fp_round>:
 6b0:	09 2e       	mov	r0, r25
 6b2:	03 94       	inc	r0
 6b4:	00 0c       	add	r0, r0
 6b6:	11 f4       	brne	.+4      	; 0x6bc <__fp_round+0xc>
 6b8:	88 23       	and	r24, r24
 6ba:	52 f0       	brmi	.+20     	; 0x6d0 <__fp_round+0x20>
 6bc:	bb 0f       	add	r27, r27
 6be:	40 f4       	brcc	.+16     	; 0x6d0 <__fp_round+0x20>
 6c0:	bf 2b       	or	r27, r31
 6c2:	11 f4       	brne	.+4      	; 0x6c8 <__fp_round+0x18>
 6c4:	60 ff       	sbrs	r22, 0
 6c6:	04 c0       	rjmp	.+8      	; 0x6d0 <__fp_round+0x20>
 6c8:	6f 5f       	subi	r22, 0xFF	; 255
 6ca:	7f 4f       	sbci	r23, 0xFF	; 255
 6cc:	8f 4f       	sbci	r24, 0xFF	; 255
 6ce:	9f 4f       	sbci	r25, 0xFF	; 255
 6d0:	08 95       	ret

000006d2 <__fp_split3>:
 6d2:	57 fd       	sbrc	r21, 7
 6d4:	90 58       	subi	r25, 0x80	; 128
 6d6:	44 0f       	add	r20, r20
 6d8:	55 1f       	adc	r21, r21
 6da:	59 f0       	breq	.+22     	; 0x6f2 <__fp_splitA+0x10>
 6dc:	5f 3f       	cpi	r21, 0xFF	; 255
 6de:	71 f0       	breq	.+28     	; 0x6fc <__fp_splitA+0x1a>
 6e0:	47 95       	ror	r20

000006e2 <__fp_splitA>:
 6e2:	88 0f       	add	r24, r24
 6e4:	97 fb       	bst	r25, 7
 6e6:	99 1f       	adc	r25, r25
 6e8:	61 f0       	breq	.+24     	; 0x702 <__fp_splitA+0x20>
 6ea:	9f 3f       	cpi	r25, 0xFF	; 255
 6ec:	79 f0       	breq	.+30     	; 0x70c <__fp_splitA+0x2a>
 6ee:	87 95       	ror	r24
 6f0:	08 95       	ret
 6f2:	12 16       	cp	r1, r18
 6f4:	13 06       	cpc	r1, r19
 6f6:	14 06       	cpc	r1, r20
 6f8:	55 1f       	adc	r21, r21
 6fa:	f2 cf       	rjmp	.-28     	; 0x6e0 <__fp_split3+0xe>
 6fc:	46 95       	lsr	r20
 6fe:	f1 df       	rcall	.-30     	; 0x6e2 <__fp_splitA>
 700:	08 c0       	rjmp	.+16     	; 0x712 <__fp_splitA+0x30>
 702:	16 16       	cp	r1, r22
 704:	17 06       	cpc	r1, r23
 706:	18 06       	cpc	r1, r24
 708:	99 1f       	adc	r25, r25
 70a:	f1 cf       	rjmp	.-30     	; 0x6ee <__fp_splitA+0xc>
 70c:	86 95       	lsr	r24
 70e:	71 05       	cpc	r23, r1
 710:	61 05       	cpc	r22, r1
 712:	08 94       	sec
 714:	08 95       	ret

00000716 <__fp_zero>:
 716:	e8 94       	clt

00000718 <__fp_szero>:
 718:	bb 27       	eor	r27, r27
 71a:	66 27       	eor	r22, r22
 71c:	77 27       	eor	r23, r23
 71e:	cb 01       	movw	r24, r22
 720:	97 f9       	bld	r25, 7
 722:	08 95       	ret

00000724 <__mulsf3>:
 724:	0e 94 a5 03 	call	0x74a	; 0x74a <__mulsf3x>
 728:	0c 94 58 03 	jmp	0x6b0	; 0x6b0 <__fp_round>
 72c:	0e 94 4a 03 	call	0x694	; 0x694 <__fp_pscA>
 730:	38 f0       	brcs	.+14     	; 0x740 <__mulsf3+0x1c>
 732:	0e 94 51 03 	call	0x6a2	; 0x6a2 <__fp_pscB>
 736:	20 f0       	brcs	.+8      	; 0x740 <__mulsf3+0x1c>
 738:	95 23       	and	r25, r21
 73a:	11 f0       	breq	.+4      	; 0x740 <__mulsf3+0x1c>
 73c:	0c 94 41 03 	jmp	0x682	; 0x682 <__fp_inf>
 740:	0c 94 47 03 	jmp	0x68e	; 0x68e <__fp_nan>
 744:	11 24       	eor	r1, r1
 746:	0c 94 8c 03 	jmp	0x718	; 0x718 <__fp_szero>

0000074a <__mulsf3x>:
 74a:	0e 94 69 03 	call	0x6d2	; 0x6d2 <__fp_split3>
 74e:	70 f3       	brcs	.-36     	; 0x72c <__mulsf3+0x8>

00000750 <__mulsf3_pse>:
 750:	95 9f       	mul	r25, r21
 752:	c1 f3       	breq	.-16     	; 0x744 <__mulsf3+0x20>
 754:	95 0f       	add	r25, r21
 756:	50 e0       	ldi	r21, 0x00	; 0
 758:	55 1f       	adc	r21, r21
 75a:	62 9f       	mul	r22, r18
 75c:	f0 01       	movw	r30, r0
 75e:	72 9f       	mul	r23, r18
 760:	bb 27       	eor	r27, r27
 762:	f0 0d       	add	r31, r0
 764:	b1 1d       	adc	r27, r1
 766:	63 9f       	mul	r22, r19
 768:	aa 27       	eor	r26, r26
 76a:	f0 0d       	add	r31, r0
 76c:	b1 1d       	adc	r27, r1
 76e:	aa 1f       	adc	r26, r26
 770:	64 9f       	mul	r22, r20
 772:	66 27       	eor	r22, r22
 774:	b0 0d       	add	r27, r0
 776:	a1 1d       	adc	r26, r1
 778:	66 1f       	adc	r22, r22
 77a:	82 9f       	mul	r24, r18
 77c:	22 27       	eor	r18, r18
 77e:	b0 0d       	add	r27, r0
 780:	a1 1d       	adc	r26, r1
 782:	62 1f       	adc	r22, r18
 784:	73 9f       	mul	r23, r19
 786:	b0 0d       	add	r27, r0
 788:	a1 1d       	adc	r26, r1
 78a:	62 1f       	adc	r22, r18
 78c:	83 9f       	mul	r24, r19
 78e:	a0 0d       	add	r26, r0
 790:	61 1d       	adc	r22, r1
 792:	22 1f       	adc	r18, r18
 794:	74 9f       	mul	r23, r20
 796:	33 27       	eor	r19, r19
 798:	a0 0d       	add	r26, r0
 79a:	61 1d       	adc	r22, r1
 79c:	23 1f       	adc	r18, r19
 79e:	84 9f       	mul	r24, r20
 7a0:	60 0d       	add	r22, r0
 7a2:	21 1d       	adc	r18, r1
 7a4:	82 2f       	mov	r24, r18
 7a6:	76 2f       	mov	r23, r22
 7a8:	6a 2f       	mov	r22, r26
 7aa:	11 24       	eor	r1, r1
 7ac:	9f 57       	subi	r25, 0x7F	; 127
 7ae:	50 40       	sbci	r21, 0x00	; 0
 7b0:	9a f0       	brmi	.+38     	; 0x7d8 <__mulsf3_pse+0x88>
 7b2:	f1 f0       	breq	.+60     	; 0x7f0 <__mulsf3_pse+0xa0>
 7b4:	88 23       	and	r24, r24
 7b6:	4a f0       	brmi	.+18     	; 0x7ca <__mulsf3_pse+0x7a>
 7b8:	ee 0f       	add	r30, r30
 7ba:	ff 1f       	adc	r31, r31
 7bc:	bb 1f       	adc	r27, r27
 7be:	66 1f       	adc	r22, r22
 7c0:	77 1f       	adc	r23, r23
 7c2:	88 1f       	adc	r24, r24
 7c4:	91 50       	subi	r25, 0x01	; 1
 7c6:	50 40       	sbci	r21, 0x00	; 0
 7c8:	a9 f7       	brne	.-22     	; 0x7b4 <__mulsf3_pse+0x64>
 7ca:	9e 3f       	cpi	r25, 0xFE	; 254
 7cc:	51 05       	cpc	r21, r1
 7ce:	80 f0       	brcs	.+32     	; 0x7f0 <__mulsf3_pse+0xa0>
 7d0:	0c 94 41 03 	jmp	0x682	; 0x682 <__fp_inf>
 7d4:	0c 94 8c 03 	jmp	0x718	; 0x718 <__fp_szero>
 7d8:	5f 3f       	cpi	r21, 0xFF	; 255
 7da:	e4 f3       	brlt	.-8      	; 0x7d4 <__mulsf3_pse+0x84>
 7dc:	98 3e       	cpi	r25, 0xE8	; 232
 7de:	d4 f3       	brlt	.-12     	; 0x7d4 <__mulsf3_pse+0x84>
 7e0:	86 95       	lsr	r24
 7e2:	77 95       	ror	r23
 7e4:	67 95       	ror	r22
 7e6:	b7 95       	ror	r27
 7e8:	f7 95       	ror	r31
 7ea:	e7 95       	ror	r30
 7ec:	9f 5f       	subi	r25, 0xFF	; 255
 7ee:	c1 f7       	brne	.-16     	; 0x7e0 <__mulsf3_pse+0x90>
 7f0:	fe 2b       	or	r31, r30
 7f2:	88 0f       	add	r24, r24
 7f4:	91 1d       	adc	r25, r1
 7f6:	96 95       	lsr	r25
 7f8:	87 95       	ror	r24
 7fa:	97 f9       	bld	r25, 7
 7fc:	08 95       	ret

000007fe <_exit>:
 7fe:	f8 94       	cli

00000800 <__stop_program>:
 800:	ff cf       	rjmp	.-2      	; 0x800 <__stop_program>
